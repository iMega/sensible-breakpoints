// Code generated by hero.
// source: /Users/irvis/projects/src/github.com/imega/sensible-breakpoints/demo/template/img.html
// DO NOT EDIT!
package template

import (
	"bytes"

	"github.com/shiyanhui/hero"
)

type Set struct {
	Url   string
	Width int
}

type Size struct {
	Width int
	Vw    int
}

type Default struct {
	Src   string
	Width int
}

func GetDemo(srcset []Set, sizes []Size, def Default, buffer *bytes.Buffer) {
	buffer.WriteString(`<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        img {
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    `)
	buffer.WriteString(`
    <img srcset="`)
	for _, s := range srcset {
		hero.EscapeHTML(s.Url, buffer)
		buffer.WriteString(" ")
		hero.FormatInt(int64(s.Width), buffer)
		buffer.WriteString(`w,
                `)
	}
	buffer.WriteString(`"
     sizes="`)
	for _, s := range sizes {
		buffer.WriteString(`
                (max-width: `)
		hero.FormatInt(int64(s.Width), buffer)
		buffer.WriteString(`em) `)
		hero.FormatInt(int64(s.Vw), buffer)
		buffer.WriteString(`vm,
            `)
	}
	hero.FormatInt(int64(def.Width), buffer)
	buffer.WriteString(`px"
     src="`)
	hero.EscapeHTML(def.Src, buffer)
	buffer.WriteString(`">
`)

	buffer.WriteString(`
</body>
</html>
`)

}
